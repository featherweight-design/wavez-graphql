// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//* User
model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  devices   Device[]
  palettes  Palette[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

//* Device
enum DeviceType {
  NANOLEAF
  LIFX
  HUE
}

model Device {
  id                   String              @id @default(uuid())
  ip                   String              @unique
  name                 String              @unique
  mac                  String              @unique
  type                 DeviceType
  userId               String
  user                 User                @relation(fields: [userId], references: [id])
  palettes             Palette[]
  nanoleafAuthTokenId  String              @unique
  nanoleafAuthToken    NanoleafAuthToken?  @relation
  nanoleafPropertiesId String?             @unique
  nanoleafProperties   NanoleafProperties?
  lifxPropertiesId     String?             @unique
  lifxProperties       LifxProperties?
  huePropertiesId      String?             @unique
  hueProperties        HueProperties?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
}

model NanoleafAuthToken {
  id        String   @id @default(uuid())
  token     String   @unique
  deviceId  String   @unique
  device    Device   @relation(fields: [deviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NanoleafProperties {
  id              String   @id @default(uuid())
  name            String
  serialNo        String   @unique
  firmwareVersion String
  model           String
  deviceId        String
  device          Device   @relation(fields: [deviceId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

//* Lifx
model LifxProperties {
  id        String   @id @default(uuid())
  deviceId  String   @unique
  device    Device?  @relation(fields: [deviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//* Hue
model HueProperties {
  id        String   @id @default(uuid())
  deviceId  String   @unique
  device    Device?  @relation(fields: [deviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//* Color Palette
model Palette {
  id        String   @id @default(uuid())
  name      String   @unique
  colors    String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  devices   Device[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
