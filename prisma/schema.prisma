// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//* User
model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  nanoleafUser NanoleafUser?
  devices      Device[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

//* Device
enum DeviceType {
  NANOLEAF
  LIFX
  HUE
}

model Device {
  id                   String              @id @default(uuid())
  ip                   String              @unique
  name                 String              @unique
  mac                  String              @unique
  type                 DeviceType
  userId               String
  user                 User                @relation(fields: [userId], references: [id])
  nanoleafUserId       String?
  NanoleafUser         NanoleafUser?       @relation(fields: [nanoleafUserId], references: [id])
  nanoleafPropertiesId String?             @unique
  nanoleafProperties   NanoleafProperties?
  lifxPropertiesId     String?             @unique
  lifxProperties       LifxProperties?
  huePropertiesId      String?             @unique
  hueProperties        HueProperties?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
}

//* Nanoleaf
model NanoleafUser {
  id         String              @id @default(uuid())
  authTokens NanoleafAuthToken[]
  devices    Device[]
  userId     String              @unique
  user       User                @relation(fields: [userId], references: [id])
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
}

model NanoleafAuthToken {
  id             String              @id @default(uuid())
  token          String              @unique
  panelId        String?
  panel          NanoleafProperties? @relation(fields: [panelId], references: [id])
  nanoleafUserId String?
  nanoleafUser   NanoleafUser?       @relation(fields: [nanoleafUserId], references: [id])
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
}

model NanoleafProperties {
  id              String             @id @default(uuid())
  name            String
  serialNo        String             @unique
  firmwareVersion String
  model           String
  effects         NanoleafEffects?
  authToken       NanoleafAuthToken?
  deviceId        String
  device          Device             @relation(fields: [deviceId], references: [id])
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
}

model NanoleafEffects {
  select       String
  effectsList  String[]
  propertiesId String             @unique
  properties   NanoleafProperties @relation(fields: [propertiesId], references: [id])
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
}

//* Lifx
model LifxProperties {
  id       String  @id @default(uuid())
  deviceId String  @unique
  device   Device? @relation(fields: [deviceId], references: [id])
}

//* Hue
model HueProperties {
  id       String  @id @default(uuid())
  deviceId String  @unique
  device   Device? @relation(fields: [deviceId], references: [id])
}
